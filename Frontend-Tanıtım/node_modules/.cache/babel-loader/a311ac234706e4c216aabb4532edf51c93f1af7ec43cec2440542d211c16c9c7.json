{"ast":null,"code":"var _jsxFileName = \"/Users/ridank/Downloads/Semester 5/CS 319/Group Project/Code/CS-319-Project/Frontend-Tan\\u0131t\\u0131m/src/components/CoordinatorDashboard/Graph.js\";\n// import React from 'react';\n// import { Line } from 'react-chartjs-2';\n// import styles from './CoordinatorDashboard.module.css';\n\n// import {\n//   Chart as ChartJS,\n//   CategoryScale,\n//   LinearScale,\n//   PointElement,\n//   LineElement,\n//   Title,\n//   Tooltip,\n//   Legend,\n// } from 'chart.js';\n\n// // Register Chart.js components\n// ChartJS.register(\n//   CategoryScale,\n//   LinearScale,\n//   PointElement,\n//   LineElement,\n//   Title,\n//   Tooltip,\n//   Legend\n// );\n\n// const Graph = ({ scheduledTours = 0, completedTours = 0, graphData }) => {\n//   // Graph configuration\n//   const data = {\n//     labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n//     datasets: [\n//       {\n//         label: 'Scheduled Tours',\n//         data: graphData?.scheduled || [],\n//         borderColor: '#ff8c00',\n//         backgroundColor: 'rgba(255, 140, 0, 0.2)',\n//         tension: 0.4,\n//       },\n//       {\n//         label: 'Completed Tours',\n//         data: graphData?.completed || [],\n//         borderColor: '#007bff',\n//         backgroundColor: 'rgba(0, 123, 255, 0.2)',\n//         tension: 0.4,\n//       },\n//     ],\n//   };\n\n//   const options = {\n//     responsive: true,\n//     maintainAspectRatio: false,\n//     plugins: {\n//       legend: {\n//         position: 'top',\n//       },\n//     },\n//     scales: {\n//       x: {\n//         grid: { display: false },\n//       },\n//       y: {\n//         beginAtZero: true,\n//       },\n//     },\n//   };\n\n//   return (\n//     <div className={styles.graphContainer}>\n//       <div className={styles.graphHeader}>\n//         <h2>Number of Tours</h2>\n//         <div className={styles.tourStats}>\n//           <p>\n//             <strong>Scheduled:</strong> {scheduledTours}\n//           </p>\n//           <p>\n//             <strong>Completed:</strong> {completedTours}\n//           </p>\n//         </div>\n//       </div>\n//       <div className={styles.graphBody}>\n//         <Line data={data} options={options} />\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Graph;\n\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nconst data = {\n  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n  datasets: [{\n    label: 'Dataset 1',\n    data: [10, 20, 30, 40, 50, 60, 70],\n    borderColor: 'rgb(75, 192, 192)',\n    backgroundColor: 'rgba(75, 192, 192, 0.2)'\n  }]\n};\nconst options = {\n  responsive: true,\n  plugins: {\n    legend: {\n      position: 'top'\n    },\n    title: {\n      display: true,\n      text: 'Test Chart'\n    }\n  }\n};\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '400px',\n      width: '600px'\n    },\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      data: data,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","data","labels","datasets","label","borderColor","backgroundColor","options","responsive","plugins","legend","position","title","display","text","App","style","height","width","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ridank/Downloads/Semester 5/CS 319/Group Project/Code/CS-319-Project/Frontend-Tanıtım/src/components/CoordinatorDashboard/Graph.js"],"sourcesContent":["// import React from 'react';\n// import { Line } from 'react-chartjs-2';\n// import styles from './CoordinatorDashboard.module.css';\n\n// import {\n//   Chart as ChartJS,\n//   CategoryScale,\n//   LinearScale,\n//   PointElement,\n//   LineElement,\n//   Title,\n//   Tooltip,\n//   Legend,\n// } from 'chart.js';\n\n// // Register Chart.js components\n// ChartJS.register(\n//   CategoryScale,\n//   LinearScale,\n//   PointElement,\n//   LineElement,\n//   Title,\n//   Tooltip,\n//   Legend\n// );\n\n// const Graph = ({ scheduledTours = 0, completedTours = 0, graphData }) => {\n//   // Graph configuration\n//   const data = {\n//     labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n//     datasets: [\n//       {\n//         label: 'Scheduled Tours',\n//         data: graphData?.scheduled || [],\n//         borderColor: '#ff8c00',\n//         backgroundColor: 'rgba(255, 140, 0, 0.2)',\n//         tension: 0.4,\n//       },\n//       {\n//         label: 'Completed Tours',\n//         data: graphData?.completed || [],\n//         borderColor: '#007bff',\n//         backgroundColor: 'rgba(0, 123, 255, 0.2)',\n//         tension: 0.4,\n//       },\n//     ],\n//   };\n\n//   const options = {\n//     responsive: true,\n//     maintainAspectRatio: false,\n//     plugins: {\n//       legend: {\n//         position: 'top',\n//       },\n//     },\n//     scales: {\n//       x: {\n//         grid: { display: false },\n//       },\n//       y: {\n//         beginAtZero: true,\n//       },\n//     },\n//   };\n\n//   return (\n//     <div className={styles.graphContainer}>\n//       <div className={styles.graphHeader}>\n//         <h2>Number of Tours</h2>\n//         <div className={styles.tourStats}>\n//           <p>\n//             <strong>Scheduled:</strong> {scheduledTours}\n//           </p>\n//           <p>\n//             <strong>Completed:</strong> {completedTours}\n//           </p>\n//         </div>\n//       </div>\n//       <div className={styles.graphBody}>\n//         <Line data={data} options={options} />\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Graph;\n\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nconst data = {\n  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n  datasets: [\n    {\n      label: 'Dataset 1',\n      data: [10, 20, 30, 40, 50, 60, 70],\n      borderColor: 'rgb(75, 192, 192)',\n      backgroundColor: 'rgba(75, 192, 192, 0.2)',\n    },\n  ],\n};\n\nconst options = {\n  responsive: true,\n  plugins: {\n    legend: {\n      position: 'top',\n    },\n    title: {\n      display: true,\n      text: 'Test Chart',\n    },\n  },\n};\n\nfunction App() {\n  return (\n    <div style={{ height: '400px', width: '600px' }}>\n      <Line data={data} options={options} />\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,iBAAiB;AACtC,SACEC,KAAK,IAAIC,OAAO,EAChBC,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,KAAK,EACLC,OAAO,EACPC,MAAM,QACD,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElBT,OAAO,CAACU,QAAQ,CACdT,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,KAAK,EACLC,OAAO,EACPC,MACF,CAAC;AAED,MAAMI,IAAI,GAAG;EACXC,MAAM,EAAE,CAAC,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,CAAC;EACxEC,QAAQ,EAAE,CACR;IACEC,KAAK,EAAE,WAAW;IAClBH,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IAClCI,WAAW,EAAE,mBAAmB;IAChCC,eAAe,EAAE;EACnB,CAAC;AAEL,CAAC;AAED,MAAMC,OAAO,GAAG;EACdC,UAAU,EAAE,IAAI;EAChBC,OAAO,EAAE;IACPC,MAAM,EAAE;MACNC,QAAQ,EAAE;IACZ,CAAC;IACDC,KAAK,EAAE;MACLC,OAAO,EAAE,IAAI;MACbC,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAED,SAASC,GAAGA,CAAA,EAAG;EACb,oBACEhB,OAAA;IAAKiB,KAAK,EAAE;MAAEC,MAAM,EAAE,OAAO;MAAEC,KAAK,EAAE;IAAQ,CAAE;IAAAC,QAAA,eAC9CpB,OAAA,CAACX,IAAI;MAACa,IAAI,EAAEA,IAAK;MAACM,OAAO,EAAEA;IAAQ;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnC,CAAC;AAEV;AAACC,EAAA,GANQT,GAAG;AAQZ,eAAeA,GAAG;AAAC,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}