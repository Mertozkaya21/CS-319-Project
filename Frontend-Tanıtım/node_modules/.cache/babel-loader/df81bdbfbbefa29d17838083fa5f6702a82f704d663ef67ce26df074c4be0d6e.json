{"ast":null,"code":"var _jsxFileName = \"/Users/ridank/Downloads/Semester 5/CS 319/Group Project/Code/CS-319-Project/Frontend-Tan\\u0131t\\u0131m/src/components/CoordinatorDashboard/Graph.js\";\n// import React from 'react';\n// import { Line } from 'react-chartjs-2';\n// import styles from './CoordinatorDashboard.module.css';\n\n// import {\n//   Chart as ChartJS,\n//   CategoryScale,\n//   LinearScale,\n//   PointElement,\n//   LineElement,\n//   Title,\n//   Tooltip,\n//   Legend,\n// } from 'chart.js';\n\n// // Register Chart.js components\n// ChartJS.register(\n//   CategoryScale,\n//   LinearScale,\n//   PointElement,\n//   LineElement,\n//   Title,\n//   Tooltip,\n//   Legend\n// );\n\n// const Graph = ({ scheduledTours = 0, completedTours = 0, graphData }) => {\n//   // Graph configuration\n//   const data = {\n//     labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n//     datasets: [\n//       {\n//         label: 'Scheduled Tours',\n//         data: graphData?.scheduled || [],\n//         borderColor: '#ff8c00',\n//         backgroundColor: 'rgba(255, 140, 0, 0.2)',\n//         tension: 0.4,\n//       },\n//       {\n//         label: 'Completed Tours',\n//         data: graphData?.completed || [],\n//         borderColor: '#007bff',\n//         backgroundColor: 'rgba(0, 123, 255, 0.2)',\n//         tension: 0.4,\n//       },\n//     ],\n//   };\n\n//   const options = {\n//     responsive: true,\n//     maintainAspectRatio: false,\n//     plugins: {\n//       legend: {\n//         position: 'top',\n//       },\n//     },\n//     scales: {\n//       x: {\n//         grid: { display: false },\n//       },\n//       y: {\n//         beginAtZero: true,\n//       },\n//     },\n//   };\n\n//   return (\n//     <div className={styles.graphContainer}>\n//       <div className={styles.graphHeader}>\n//         <h2>Number of Tours</h2>\n//         <div className={styles.tourStats}>\n//           <p>\n//             <strong>Scheduled:</strong> {scheduledTours}\n//           </p>\n//           <p>\n//             <strong>Completed:</strong> {completedTours}\n//           </p>\n//         </div>\n//       </div>\n//       <div className={styles.graphBody}>\n//         <Line data={data} options={options} />\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Graph;\n\nimport React from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst data = [{\n  name: 'Jan',\n  scheduled: 10,\n  completed: 5\n}, {\n  name: 'Feb',\n  scheduled: 15,\n  completed: 10\n}, {\n  name: 'Mar',\n  scheduled: 20,\n  completed: 15\n}];\nconst options = {\n  responsive: true,\n  plugins: {\n    legend: {\n      position: 'top'\n    },\n    title: {\n      display: true,\n      text: 'Test Chart'\n    }\n  }\n};\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '400px',\n      width: '600px'\n    },\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      data: data,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","jsxDEV","_jsxDEV","data","name","scheduled","completed","options","responsive","plugins","legend","position","title","display","text","App","style","height","width","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ridank/Downloads/Semester 5/CS 319/Group Project/Code/CS-319-Project/Frontend-Tanıtım/src/components/CoordinatorDashboard/Graph.js"],"sourcesContent":["// import React from 'react';\n// import { Line } from 'react-chartjs-2';\n// import styles from './CoordinatorDashboard.module.css';\n\n// import {\n//   Chart as ChartJS,\n//   CategoryScale,\n//   LinearScale,\n//   PointElement,\n//   LineElement,\n//   Title,\n//   Tooltip,\n//   Legend,\n// } from 'chart.js';\n\n// // Register Chart.js components\n// ChartJS.register(\n//   CategoryScale,\n//   LinearScale,\n//   PointElement,\n//   LineElement,\n//   Title,\n//   Tooltip,\n//   Legend\n// );\n\n// const Graph = ({ scheduledTours = 0, completedTours = 0, graphData }) => {\n//   // Graph configuration\n//   const data = {\n//     labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n//     datasets: [\n//       {\n//         label: 'Scheduled Tours',\n//         data: graphData?.scheduled || [],\n//         borderColor: '#ff8c00',\n//         backgroundColor: 'rgba(255, 140, 0, 0.2)',\n//         tension: 0.4,\n//       },\n//       {\n//         label: 'Completed Tours',\n//         data: graphData?.completed || [],\n//         borderColor: '#007bff',\n//         backgroundColor: 'rgba(0, 123, 255, 0.2)',\n//         tension: 0.4,\n//       },\n//     ],\n//   };\n\n//   const options = {\n//     responsive: true,\n//     maintainAspectRatio: false,\n//     plugins: {\n//       legend: {\n//         position: 'top',\n//       },\n//     },\n//     scales: {\n//       x: {\n//         grid: { display: false },\n//       },\n//       y: {\n//         beginAtZero: true,\n//       },\n//     },\n//   };\n\n//   return (\n//     <div className={styles.graphContainer}>\n//       <div className={styles.graphHeader}>\n//         <h2>Number of Tours</h2>\n//         <div className={styles.tourStats}>\n//           <p>\n//             <strong>Scheduled:</strong> {scheduledTours}\n//           </p>\n//           <p>\n//             <strong>Completed:</strong> {completedTours}\n//           </p>\n//         </div>\n//       </div>\n//       <div className={styles.graphBody}>\n//         <Line data={data} options={options} />\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Graph;\n\nimport React from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\n\n\n\nconst data = [\n    { name: 'Jan', scheduled: 10, completed: 5 },\n    { name: 'Feb', scheduled: 15, completed: 10 },\n    { name: 'Mar', scheduled: 20, completed: 15 },\n  ];\nconst options = {\n  responsive: true,\n  plugins: {\n    legend: {\n      position: 'top',\n    },\n    title: {\n      display: true,\n      text: 'Test Chart',\n    },\n  },\n};\n\nfunction App() {\n  return (\n    <div style={{ height: '400px', width: '600px' }}>\n      <Line data={data} options={options} />\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,IAAI,EAAEC,KAAK,EAAEC,KAAK,EAAEC,aAAa,EAAEC,OAAO,EAAEC,MAAM,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAIzF,MAAMC,IAAI,GAAG,CACT;EAAEC,IAAI,EAAE,KAAK;EAAEC,SAAS,EAAE,EAAE;EAAEC,SAAS,EAAE;AAAE,CAAC,EAC5C;EAAEF,IAAI,EAAE,KAAK;EAAEC,SAAS,EAAE,EAAE;EAAEC,SAAS,EAAE;AAAG,CAAC,EAC7C;EAAEF,IAAI,EAAE,KAAK;EAAEC,SAAS,EAAE,EAAE;EAAEC,SAAS,EAAE;AAAG,CAAC,CAC9C;AACH,MAAMC,OAAO,GAAG;EACdC,UAAU,EAAE,IAAI;EAChBC,OAAO,EAAE;IACPC,MAAM,EAAE;MACNC,QAAQ,EAAE;IACZ,CAAC;IACDC,KAAK,EAAE;MACLC,OAAO,EAAE,IAAI;MACbC,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAED,SAASC,GAAGA,CAAA,EAAG;EACb,oBACEb,OAAA;IAAKc,KAAK,EAAE;MAAEC,MAAM,EAAE,OAAO;MAAEC,KAAK,EAAE;IAAQ,CAAE;IAAAC,QAAA,eAC9CjB,OAAA,CAACP,IAAI;MAACQ,IAAI,EAAEA,IAAK;MAACI,OAAO,EAAEA;IAAQ;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnC,CAAC;AAEV;AAACC,EAAA,GANQT,GAAG;AAQZ,eAAeA,GAAG;AAAC,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}