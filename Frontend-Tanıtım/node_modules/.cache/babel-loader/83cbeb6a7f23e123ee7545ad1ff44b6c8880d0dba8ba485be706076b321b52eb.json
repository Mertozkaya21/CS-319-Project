{"ast":null,"code":"var _jsxFileName = \"/Users/ridank/Downloads/Semester 5/CS 319/Group Project/Code/CS-319-Project/Frontend-Tan\\u0131t\\u0131m/src/components/CoordinatorDashboard/PieChart.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { PieChart, Pie, Cell, Legend, Tooltip } from 'recharts';\nimport styles from './CoordinatorDashboard.module.css'; // Assuming you add necessary CSS here\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomPieChart = () => {\n  _s();\n  const [chartData, setChartData] = useState([]);\n\n  // Dummy data to simulate initial state\n  const dummyData = [{\n    name: 'Engineering',\n    value: 30,\n    color: '#374151'\n  },\n  // Navy\n  {\n    name: 'Business Administration',\n    value: 15,\n    color: '#f97316'\n  },\n  // Orange\n  {\n    name: 'Art, Design, and Architecture',\n    value: 20,\n    color: '#d946ef'\n  },\n  // Pink\n  {\n    name: 'Others',\n    value: 35,\n    color: '#2563eb'\n  } // Blue\n  ];\n\n  // Fetch data from the backend\n  useEffect(() => {\n    // Simulated API call\n    const fetchChartData = async () => {\n      // Simulate delay\n      await new Promise(resolve => setTimeout(resolve, 1000));\n\n      // Replace with real API response\n      const backendData = [{\n        name: 'Engineering',\n        value: 30,\n        color: '#374151'\n      }, {\n        name: 'Business Administration',\n        value: 15,\n        color: '#f97316'\n      }, {\n        name: 'Art, Design, and Architecture',\n        value: 20,\n        color: '#d946ef'\n      }, {\n        name: 'Others',\n        value: 35,\n        color: '#2563eb'\n      }];\n      setChartData(backendData);\n    };\n    fetchChartData();\n  }, []);\n\n  // Render loading state if no data yet\n  if (!chartData.length) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading Pie Chart...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.pieChartContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: styles.chartTitle,\n      children: \"Departments of Interest\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PieChart, {\n      width: 400,\n      height: 300,\n      children: [/*#__PURE__*/_jsxDEV(Pie, {\n        data: chartData,\n        cx: \"50%\" // Center X\n        ,\n        cy: \"50%\" // Center Y\n        ,\n        outerRadius: 100 // Radius size\n        ,\n        fill: \"#8884d8\",\n        dataKey: \"value\" // Key used for pie chart\n        ,\n        nameKey: \"name\" // Key used for names\n        ,\n        label: entry => `${entry.name} (${entry.value}%)` // Add labels\n        ,\n        children: chartData.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n          fill: entry.color\n        }, `cell-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Legend, {\n        verticalAlign: \"bottom\",\n        height: 36\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(CustomPieChart, \"Leo9Xk/Ki5G6SkYc3yZESo07mWw=\");\n_c = CustomPieChart;\nexport default CustomPieChart;\nvar _c;\n$RefreshReg$(_c, \"CustomPieChart\");","map":{"version":3,"names":["React","useState","useEffect","PieChart","Pie","Cell","Legend","Tooltip","styles","jsxDEV","_jsxDEV","CustomPieChart","_s","chartData","setChartData","dummyData","name","value","color","fetchChartData","Promise","resolve","setTimeout","backendData","length","children","fileName","_jsxFileName","lineNumber","columnNumber","className","pieChartContainer","chartTitle","width","height","data","cx","cy","outerRadius","fill","dataKey","nameKey","label","entry","map","index","verticalAlign","_c","$RefreshReg$"],"sources":["/Users/ridank/Downloads/Semester 5/CS 319/Group Project/Code/CS-319-Project/Frontend-Tanıtım/src/components/CoordinatorDashboard/PieChart.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { PieChart, Pie, Cell, Legend, Tooltip } from 'recharts';\nimport styles from './CoordinatorDashboard.module.css'; // Assuming you add necessary CSS here\n\nconst CustomPieChart = () => {\n  const [chartData, setChartData] = useState([]);\n\n  // Dummy data to simulate initial state\n  const dummyData = [\n    { name: 'Engineering', value: 30, color: '#374151' }, // Navy\n    { name: 'Business Administration', value: 15, color: '#f97316' }, // Orange\n    { name: 'Art, Design, and Architecture', value: 20, color: '#d946ef' }, // Pink\n    { name: 'Others', value: 35, color: '#2563eb' }, // Blue\n  ];\n\n  // Fetch data from the backend\n  useEffect(() => {\n    // Simulated API call\n    const fetchChartData = async () => {\n      // Simulate delay\n      await new Promise((resolve) => setTimeout(resolve, 1000));\n\n      // Replace with real API response\n      const backendData = [\n        { name: 'Engineering', value: 30, color: '#374151' },\n        { name: 'Business Administration', value: 15, color: '#f97316' },\n        { name: 'Art, Design, and Architecture', value: 20, color: '#d946ef' },\n        { name: 'Others', value: 35, color: '#2563eb' },\n      ];\n\n      setChartData(backendData);\n    };\n\n    fetchChartData();\n  }, []);\n\n  // Render loading state if no data yet\n  if (!chartData.length) {\n    return <p>Loading Pie Chart...</p>;\n  }\n\n  return (\n    <div className={styles.pieChartContainer}>\n      <h2 className={styles.chartTitle}>Departments of Interest</h2>\n      <PieChart width={400} height={300}>\n        <Pie\n          data={chartData}\n          cx=\"50%\" // Center X\n          cy=\"50%\" // Center Y\n          outerRadius={100} // Radius size\n          fill=\"#8884d8\"\n          dataKey=\"value\" // Key used for pie chart\n          nameKey=\"name\" // Key used for names\n          label={(entry) => `${entry.name} (${entry.value}%)`} // Add labels\n        >\n          {chartData.map((entry, index) => (\n            <Cell key={`cell-${index}`} fill={entry.color} />\n          ))}\n        </Pie>\n        <Tooltip />\n        <Legend verticalAlign=\"bottom\" height={36} />\n      </PieChart>\n    </div>\n  );\n};\n\nexport default CustomPieChart;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,QAAQ,EAAEC,GAAG,EAAEC,IAAI,EAAEC,MAAM,EAAEC,OAAO,QAAQ,UAAU;AAC/D,OAAOC,MAAM,MAAM,mCAAmC,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAExD,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;;EAE9C;EACA,MAAMc,SAAS,GAAG,CAChB;IAAEC,IAAI,EAAE,aAAa;IAAEC,KAAK,EAAE,EAAE;IAAEC,KAAK,EAAE;EAAU,CAAC;EAAE;EACtD;IAAEF,IAAI,EAAE,yBAAyB;IAAEC,KAAK,EAAE,EAAE;IAAEC,KAAK,EAAE;EAAU,CAAC;EAAE;EAClE;IAAEF,IAAI,EAAE,+BAA+B;IAAEC,KAAK,EAAE,EAAE;IAAEC,KAAK,EAAE;EAAU,CAAC;EAAE;EACxE;IAAEF,IAAI,EAAE,QAAQ;IAAEC,KAAK,EAAE,EAAE;IAAEC,KAAK,EAAE;EAAU,CAAC,CAAE;EAAA,CAClD;;EAED;EACAhB,SAAS,CAAC,MAAM;IACd;IACA,MAAMiB,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC;MACA,MAAM,IAAIC,OAAO,CAAEC,OAAO,IAAKC,UAAU,CAACD,OAAO,EAAE,IAAI,CAAC,CAAC;;MAEzD;MACA,MAAME,WAAW,GAAG,CAClB;QAAEP,IAAI,EAAE,aAAa;QAAEC,KAAK,EAAE,EAAE;QAAEC,KAAK,EAAE;MAAU,CAAC,EACpD;QAAEF,IAAI,EAAE,yBAAyB;QAAEC,KAAK,EAAE,EAAE;QAAEC,KAAK,EAAE;MAAU,CAAC,EAChE;QAAEF,IAAI,EAAE,+BAA+B;QAAEC,KAAK,EAAE,EAAE;QAAEC,KAAK,EAAE;MAAU,CAAC,EACtE;QAAEF,IAAI,EAAE,QAAQ;QAAEC,KAAK,EAAE,EAAE;QAAEC,KAAK,EAAE;MAAU,CAAC,CAChD;MAEDJ,YAAY,CAACS,WAAW,CAAC;IAC3B,CAAC;IAEDJ,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,IAAI,CAACN,SAAS,CAACW,MAAM,EAAE;IACrB,oBAAOd,OAAA;MAAAe,QAAA,EAAG;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EACpC;EAEA,oBACEnB,OAAA;IAAKoB,SAAS,EAAEtB,MAAM,CAACuB,iBAAkB;IAAAN,QAAA,gBACvCf,OAAA;MAAIoB,SAAS,EAAEtB,MAAM,CAACwB,UAAW;MAAAP,QAAA,EAAC;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC9DnB,OAAA,CAACP,QAAQ;MAAC8B,KAAK,EAAE,GAAI;MAACC,MAAM,EAAE,GAAI;MAAAT,QAAA,gBAChCf,OAAA,CAACN,GAAG;QACF+B,IAAI,EAAEtB,SAAU;QAChBuB,EAAE,EAAC,KAAK,CAAC;QAAA;QACTC,EAAE,EAAC,KAAK,CAAC;QAAA;QACTC,WAAW,EAAE,GAAI,CAAC;QAAA;QAClBC,IAAI,EAAC,SAAS;QACdC,OAAO,EAAC,OAAO,CAAC;QAAA;QAChBC,OAAO,EAAC,MAAM,CAAC;QAAA;QACfC,KAAK,EAAGC,KAAK,IAAK,GAAGA,KAAK,CAAC3B,IAAI,KAAK2B,KAAK,CAAC1B,KAAK,IAAK,CAAC;QAAA;QAAAQ,QAAA,EAEpDZ,SAAS,CAAC+B,GAAG,CAAC,CAACD,KAAK,EAAEE,KAAK,kBAC1BnC,OAAA,CAACL,IAAI;UAAuBkC,IAAI,EAAEI,KAAK,CAACzB;QAAM,GAAnC,QAAQ2B,KAAK,EAAE;UAAAnB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAsB,CACjD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNnB,OAAA,CAACH,OAAO;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACXnB,OAAA,CAACJ,MAAM;QAACwC,aAAa,EAAC,QAAQ;QAACZ,MAAM,EAAE;MAAG;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEV,CAAC;AAACjB,EAAA,CA5DID,cAAc;AAAAoC,EAAA,GAAdpC,cAAc;AA8DpB,eAAeA,cAAc;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}